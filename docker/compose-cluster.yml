services:
  broker-1:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: broker-1
    ports:
      - '9092:9092'
    environment: &common_config # Broker specific options
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092,DOCKER://broker-1:9092'
      KAFKA_CFG_NODE_ID: '1'
      # General options
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_ENABLE_KRAFT: 'yes'
      KAFKA_KRAFT_CLUSTER_ID: 'abcdefghijklmnopqrstuv'
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      # Ports configuration
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092,DOCKER://:19092,CONTROLLER://:29092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker-1:29092,2@broker-2:29092,3@broker-3:29092'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'DOCKER'
      # Replication options
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: '3'
      KAFKA_CFG_MIN_INSYNC_REPLICAS: '1'
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: '3'
      KAFKA_CFG_TRANSACTION_PARTITION_VERIFICATION_ENABLE: 'false'
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '3'
      # Consumer group options
      KAFKA_CFG_GROUP_COORDINATOR_REBALANCE_PROTOCOLS: 'classic,consumer'
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      # Do not use this in GitHub CI - Needed for Docker on Apple Silicon
      _JAVA_OPTIONS: '-XX:UseSVE=0'

  broker-2:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: broker-2
    ports:
      - '9093:9092'
    environment:
      <<: *common_config
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9093,DOCKER://broker-2:19092'
      KAFKA_CFG_NODE_ID: '2'

  broker-3:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: broker-3
    ports:
      - '9094:9092'
    environment:
      <<: *common_config
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9094,DOCKER://broker-3:19092'
      KAFKA_CFG_NODE_ID: '3'

  broker-sasl:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: broker-sasl
    ports:
      - '9095:9092'
    volumes:
      - './data/jaas/jaas.conf:/opt/bitnami/kafka/config/kafka_jaas.conf'
    environment:
      <<: *common_config
      # Ports configuration
      KAFKA_CFG_LISTENERS: 'SASL_PLAINTEXT://:9092,PLAINTEXT://:19092,CONTROLLER://:29092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'SASL_PLAINTEXT:SASL_PLAINTEXT,PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'SASL_PLAINTEXT://localhost:9092,PLAINTEXT://localhost:19092'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker-sasl:29092'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      # Replication options
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: '1'
      KAFKA_CFG_MIN_INSYNC_REPLICAS: '1'
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      # SASL
      KAFKA_CLIENT_USERS: 'admin'
      KAFKA_CLIENT_PASSWORDS: 'admin'
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: 'PLAIN,SCRAM-SHA-256,SCRAM-SHA-512'
      KAFKA_CFG_SUPER_USERS: 'User:admin'
      KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'false'
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: 'PLAIN'
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: 'PLAIN'
